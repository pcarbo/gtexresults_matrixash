#!/usr/bin/env sos-runner
#vim: set filetype=python: set expandtab : ts=4:
#fileformat=SOS1.0

parameter: tissues_brain = ["Brain_Anterior_cingulate_cortex_BA24",
           "Brain_Caudate_basal_ganglia",
           "Brain_Cerebellar_Hemisphere",
           "Brain_Cerebellum",
           "Brain_Cortex",
           "Brain_Frontal_Cortex_BA9",
           "Brain_Hippocampus",
           "Brain_Hypothalamus",
           "Brain_Nucleus_accumbens_basal_ganglia",
           "Brain_Putamen_basal_ganglia"]
parameter: tissues_other = ["Adipose_Subcutaneous",
           "Adipose_Visceral_Omentum",
           "Adrenal_Gland",
           "Artery_Aorta",
           "Artery_Coronary",
           "Artery_Tibial",
           "Breast_Mammary_Tissue",
           "Cells_EBV-transformed_lymphocytes",
           "Cells_Transformed_fibroblasts",
           "Colon_Sigmoid",
           "Colon_Transverse",
           "Esophagus_Gastroesophageal_Junction",
           "Esophagus_Mucosa",
           "Esophagus_Muscularis",
           "Heart_Atrial_Appendage",
           "Heart_Left_Ventricle",
           "Liver",
           "Lung",
           "Muscle_Skeletal",
           "Nerve_Tibial",
           "Ovary",
           "Pancreas",
           "Pituitary",
           "Prostate",
           "Skin_Not_Sun_Exposed_Suprapubic",
           "Skin_Sun_Exposed_Lower_leg",
           "Small_Intestine_Terminal_Ileum",
           "Spleen",
           "Stomach",
           "Testis",
           "Thyroid",
           "Uterus",
           "Vagina",
           "Whole_Blood"]
parameter: genes = ["ENSG00000025772.7",
           "ENSG00000056661.9",
           "ENSG00000064012.17",
           "ENSG00000089486.12",
           "ENSG00000104472.5",
           "ENSG00000108384.10",
           "ENSG00000112977.11",
           "ENSG00000120088.10",
           "ENSG00000135744.7",
           "ENSG00000136059.10",
           "ENSG00000140265.8",
           "ENSG00000145214.9",
           "ENSG00000149054.10",
           "ENSG00000160766.10",
           "ENSG00000164124.6",
           "ENSG00000177084.12",
           "ENSG00000181240.9",
           "ENSG00000187824.4",
           "ENSG00000188732.6",
           "ENSG00000189171.9",
           "ENSG00000189316.3",
           "ENSG00000198794.7",
           "ENSG00000225439.2",
           "ENSG00000249846.2",
           "ENSG00000264247.1",
           "ENSG00000267508.1",
           "ENSG00000272030.1"]
parameter: eqtl_db = "/project/mstephens/data/internal_supp/gtex-v6-sumstat-hdf5/MatrixEQTLSumStats.h5"
parameter: data_prefix = "/project/mstephens/data/external_private_supp/gtex-v6/eqtl_data/GTEx_Analysis_2015-01-12_eQTLInputFiles"
parameter: work_dir = "."
parameter: lib_src = ["/project/mstephens/gtex/scripts/SumstatQuery.R"]
tissues = tissues_brain + tissues_other

[extract_1]
# Identify SNPs
# Input: one gene name
# Output: text file of 3 columns: gene, SNP A and SNP B
output: "TwoSNPs.dat" 
R:
  for (i in c(${lib_src!r,})) {
      source(i)
  }
  genes = c(${genes!r,})
  output = data.frame(matrix(NA, length(genes), 3))
  colnames(output) = c("gene", "SNP_Brain", "SNP_Other")
  j = 1
  for (i in genes) {
     dat = -log10(GetSS(i, ${eqtl_db!r})$"p-value") 
     brain.col = which(colnames(dat) %in% c(${tissues_brain!r,}))
     snp.brain = rownames(dat)[matxMax(dat[, brain.col])[1]]
     non.brain.col = which(colnames(dat) %in% c(${tissues_other!r,}))
     snp.non.brain = rownames(dat)[matxMax(dat[, non.brain.col])[1]]
     output[j,] = c(i, snp.brain, snp.non.brain)
     j = j + 1
  }
  write.csv(output, ${output!r})

[extract_2]
# Extract data
# Input: one gene name and 2 SNPs
# Output: one data-set for every tissue
input: for_each = ["tissues"]
task: concurrent = True
R:
  GetCovar <- function() {
      cmd <- paste("gzip -dc", paste(${data_prefix!r}, "_covariates/", paste0(Tissue, "_Analysis.covariates.txt.gz"), sep = ''), '>', Covfile)
      ##print(cmd)
      system(cmd)
  }
  GetGE <- function(gene) {
      GESource <- paste(${data_prefix!r}, "_geneLevelNormalizedExpressionMatrices/", paste0(Tissue, "_Analysis.expr.txt.gz"), sep = '')
      cmd1 <- paste("zcat ", GESource, " | head -1 >", GEfile)
      cmd2 <- paste("zcat ", GESource, " | awk '$1 == var {print; exit}' var=\"", gene, "\" >> ", GEfile, sep = '')
      ##print(cmd1)
      ##print(cmd2)
      system(cmd1)
      system(cmd2)
  }
  GetSNP <- function(snps) {
      SNPSource <- paste(${data_prefix!r}, "_snpMatrices/", paste0(Tissue, "_Analysis.snps.txt.gz"), sep = '')
      SNPPattern <- paste('"', '^(', paste(snps, collapse = "|"), ")\\b", '"', sep = '')
      cmd1 <- paste("zcat ", SNPSource, " | head -1 >", SNPfile)
      cmd2 <- paste("zcat ", SNPSource, " | grep -E ", SNPPattern, " >> ", SNPfile, sep = '')
      ##print(cmd1)
      ##print(cmd2)
      system(cmd1)
      system(cmd2)
  }
  
  dat = read.csv(${input!r}, stringsAsFactors = F)[,-1]
  Tissue = ${_tissues!r}
  Covfile = paste(${work_dir!r}, paste0(Tissue, '_Covariates.txt'), sep = '/')
  GetCovar()
  for (i in 1:nrow(dat)) {
      print(c(Tissue, dat[i, 1]))
      GEfile = paste(${work_dir!r}, paste0(Tissue, '_', dat[i, 1], '_GE.txt'), sep = '/')
      SNPfile = paste(${work_dir!r}, paste0(Tissue, '_', dat[i, 1], '_SNP.txt'), sep = '/')
      GetGE(dat[i, 1])
      GetSNP(dat[i, c(2,3)])
  }

[analyze_1]
# Run analysis
# Input: tissue specific data-set
# Output: an R object of 2 SNP model analysis
input: for_each = ["tissues", "genes"]
output: expand_pattern("{_tissues}_{_genes}.rds")
task: concurrent = True
R:
  covar = t(read.table(paste(${work_dir!r}, paste0(${_tissues!r}, '_Covariates.txt'), sep = '/'), header = T)[,-1])
  genotype = t(read.table(paste(${work_dir!r}, paste0(${_tissues!r}, '_', ${_genes!r}, '_SNP.txt'), sep = '/'), header = T)[, -1])
  if (ncol(genotype) == 1) {
     saveRDS(list(joint = NA, single = NA), ${_output!r})
  } else {
    colnames(genotype) = c("SNP1", "SNP2")
    phenotype = t(read.table(paste(${work_dir!r}, paste0(${_tissues!r}, '_', ${_genes!r}, '_GE.txt'), sep = '/'), header = T)[,-1])
    model.full = summary(lm(phenotype ~ genotype + covar))$coef[c(2,3),]
    model.1 = summary(lm(phenotype ~ genotype[,1] + covar))$coef[2,]
    model.2 = summary(lm(phenotype ~ genotype[,2] + covar))$coef[2,]
    saveRDS(list(joint = model.full, single = rbind(model.1, model.2)), ${_output!r})
  }
  
[analysis_2]
# Make table summary 
# Input: All analysis results
# Output: A table of size gene by tissue
#  in each cell there are univarate and joint anlaysis
output: 'TwoSNPs.html'
python:

  def get_star(p):
    if p >= 0.05:
       return ''
    elif p < 0.0001:
       return '***'
    elif p < 0.001:
       return '**'
    else:
       return '*'

  # load results
  from dsc.utils import load_rds
  res = {'genes': [${genes!r,}]}
  for i in [${tissues!r,}]:
      res[i] = []
      for ii in [${genes!r,}]:
          dat = load_rds('{}_{}.rds'.format(i, ii))
          joint = '{0:.2E}{1},{2:.2E}{3}'.format(dat['joint'][0, 1], get_star(dat['joint'][0, 3]),
                dat['joint'][1, 1], get_star(dat['joint'][1, 3])) if len(dat['joint'] != 1) else 'NA'
          single = '{0:.2E}{1},{2:.2E}{3}'.format(dat['single'][0, 1], get_star(dat['single'][0, 3]),
                dat['single'][1, 1], get_star(dat['single'][1, 3])) if len(dat['single'] != 1) else 'NA'
          res[i].append('{}; {}'.format(joint, single))

  # make table
  keys = ['genes'] + [${tissues!r,}]
  length = len(res[keys[0]])
  table = ['<table style="width:300px">', '<tr>']
  for k in keys:
    table.append('<td>%s</td>' % k)
  table.append('</tr>')

  for i in range(length):
    table.append('<tr>')
    for k in keys:
        table.append('<td>%s</td>' % res[k][i])
    table.append('</tr>')
  table.append('</table>')
  with open(${output!r}, 'w') as f:
       f.write('\n'.join(table))